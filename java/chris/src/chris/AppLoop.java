package chris;

import java.util.logging.Level;
import java.util.logging.Logger;
import message.BaseMessage;

/**
 *  Очередь сообщений приложения, а также средства выборки и направления сообщений
 * на обработку.
 * @author su
 */
public class AppLoop extends BaseMessageLoop {

    //~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$
    //
    //                                  Наследуемый интерфейс
    //
    //~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$~~~$$$

    //---$$$---$$$---$$$---$$$---$$$ protected переменные ---$$$---$$$---$$$---$$$---$$$--

    //---$$$---$$$---$$$---$$$---$$$--- protected методы ---$$$---$$$---$$$---$$$---$$$---

    /**
     * Специальная обработка по завершению работы нити.
     */
    protected void ПоЗакрытию() {
        
        System.out.println("Приложение закрывается");
        
    }   // ПоЗакрытию()
    
    /**
     * Когда в поле адресата сообщения стоит null, подразумевается отдать это сообщение
     * на распознание обработку объекту петли сообщений, а не функтору.
     * @param cооб_Щение сообщение без указания адресата.
     */
    @Override
    protected void _роднаяОбработкаСообщения_(BaseMessage cооб_Щение) {
        
        Logger.getLogger(AppLoop.class.getName()).log(Level.SEVERE, "Неопознанное сообщение: {0}", cооб_Щение.getClass().getName());
        
    }   // РоднаяОбработкаСообщения()
    
    //---$$$---$$$---$$$---$$$---$$$--- protected классы ---$$$---$$$---$$$---$$$---$$$---



}
